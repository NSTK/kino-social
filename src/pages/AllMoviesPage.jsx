import React, { useEffect, useState } from 'react';
import axios from 'axios';
import './AllMoviesPage.css';
import { FaFilm } from 'react-icons/fa';
import { Link } from 'react-router-dom';

const countryNames = {
  'United States of America': '–°–®–ê',
  'Russia': '–†–æ—Å—Å–∏—è',
  'Soviet Union': '–°–°–°–†',
  'United Kingdom': '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è',
  'Germany': '–ì–µ—Ä–º–∞–Ω–∏—è',
  'France': '–§—Ä–∞–Ω—Ü–∏—è',
  'Italy': '–ò—Ç–∞–ª–∏—è',
  'Japan': '–Ø–ø–æ–Ω–∏—è',
  'New Zealand': '–ù–æ–≤–∞—è –ó–µ–ª–∞–Ω–¥–∏—è',
  'Australia': '–ê–≤—Å—Ç—Ä–∞–ª–∏—è',
  'South Korea': '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è',
  'China': '–ö–∏—Ç–∞–π',
  'Spain': '–ò—Å–ø–∞–Ω–∏—è',
  'Belarus': '–ë–µ–ª–∞—Ä—É—Å—å',
  'Greece': '–ì—Ä–µ—Ü–∏—è',
  'Hong Kong': '–ì–æ–Ω–∫–æ–Ω–≥',
  'Canada': '–ö–∞–Ω–∞–¥–∞',
  'Belgium': '–ë–µ–ª—å–≥–∏—è',
  'South Africa': '–Æ–ê–†',
  'Poland': '–ü–æ–ª—å—à–∞',
  'Vietnam': '–í—å–µ—Ç–Ω–∞–º',
  'Denmark': '–î–∞–Ω–∏—è',
  'Serbia': '–°–µ—Ä–±–∏—è',
  'Estonia': '–≠—Å—Ç–æ–Ω–∏—è',
  'St. Kitts and Nevis': '–°–µ–Ω—Ç-–ö–∏—Ç—Å –∏ –ù–µ–≤–∏—Å',
  'India': '–ò–Ω–¥–∏—è',
  'Latvia': '–õ–∞—Ç–≤–∏—è',
  'Bulgaria': '–ë–æ–ª–≥–∞—Ä–∏—è',
  'Ireland': '–ò—Ä–ª–∞–Ω–¥–∏—è',
  'Argentina': '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞',
  'Finland': '–§–∏–Ω–ª—è–Ω–¥–∏—è',
  'Sweden': '–®–≤–µ—Ü–∏—è',
  'Mexico': '–ú–µ–∫—Å–∏–∫–∞',
  'Mongolia': '–ú–æ–Ω–≥–æ–ª–∏—è',
  'Colombia': '–ö–æ–ª—É–º–±–∏—è',
  'N/A': '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
};

const AllMoviesPage = () => {
  const [movies, setMovies] = useState([]);
  const [directors, setDirectors] = useState([]);
  const [genreFilter, setGenreFilter] = useState('');
  const [yearFilter, setYearFilter] = useState('');
  const [countryFilter, setCountryFilter] = useState('');
  const [directorFilter, setDirectorFilter] = useState('');

  useEffect(() => {
    const fetchMovies = async () => {
      try {
        const res = await axios.get('http://localhost:3001/api/movies?limit=0');
        setMovies(res.data);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–ª—å–º–æ–≤:', err);
      }
    };

    const fetchDirectors = async () => {
      try {
        const res = await axios.get('http://localhost:3001/api/directors');
        setDirectors(res.data);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ–∂–∏—Å—Å—ë—Ä–æ–≤:', err);
      }
    };

    fetchMovies();
    fetchDirectors();
  }, []);

  const containsNonLatin = (text) =>
    /[\u3040-\u30FF\u3400-\u4DBF\u4E00-\u9FFF]/.test(text);

  const uniqueCountries = Array.from(
    new Set(movies.map((movie) => movie.Country).filter(Boolean))
  );

  const filteredMovies = movies.filter((movie) => {
    const matchesGenre = genreFilter
      ? movie.genres && movie.genres.toLowerCase().includes(genreFilter.toLowerCase())
      : true;

    const matchesYear = yearFilter
      ? movie.Release_year && movie.Release_year.toString() === yearFilter
      : true;

    const matchesCountry = countryFilter
      ? movie.Country && movie.Country.toLowerCase() === countryFilter.toLowerCase()
      : true;

    const matchesDirector = directorFilter
      ? movie.directors && movie.directors.toLowerCase().includes(directorFilter.toLowerCase())
      : true;

    return matchesGenre && matchesYear && matchesCountry && matchesDirector && !containsNonLatin(movie.Title);
  });

  return (
    <div className="all-movies-page">
      <h2><FaFilm /> –§–∏–ª—å–º—ã</h2>
      <div className="filter-bar">
        {/* –°–µ–ª–µ–∫—Ç–æ—Ä—ã: –∂–∞–Ω—Ä, –≥–æ–¥, —Å—Ç—Ä–∞–Ω–∞, —Ä–µ–∂–∏—Å—Å—ë—Ä */}
        {/* ... –∫–∞–∫ —Ä–∞–Ω—å—à–µ ... */}
        <label htmlFor="genre-select">–ñ–∞–Ω—Ä:</label>
        <select
          id="genre-select"
          value={genreFilter}
          onChange={(e) => setGenreFilter(e.target.value)}
          className="genre-select"
        >
          <option value="">–í—Å–µ –∂–∞–Ω—Ä—ã</option>
          <option value="–±–æ–µ–≤–∏–∫">–ë–æ–µ–≤–∏–∫</option>
          <option value="–¥—Ä–∞–º–∞">–î—Ä–∞–º–∞</option>
          <option value="–∫–æ–º–µ–¥–∏—è">–ö–æ–º–µ–¥–∏—è</option>
          <option value="—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞">–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞</option>
          <option value="–º–µ–ª–æ–¥—Ä–∞–º–∞">–ú–µ–ª–æ–¥—Ä–∞–º–∞</option>
          <option value="—É–∂–∞—Å—ã">–£–∂–∞—Å—ã</option>
          <option value="–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è">–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è</option>
          <option value="–∫—Ä–∏–º–∏–Ω–∞–ª">–ö—Ä–∏–º–∏–Ω–∞–ª</option>
          <option value="–∏—Å—Ç–æ—Ä–∏—è">–ò—Å—Ç–æ—Ä–∏—è</option>
        </select>

        <label htmlFor="year-input">–ì–æ–¥:</label>
        <input
          type="number"
          id="year-input"
          value={yearFilter}
          onChange={(e) => setYearFilter(e.target.value)}
          placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 2020"
          className="year-input"
        />

        <label htmlFor="country-select">–°—Ç—Ä–∞–Ω–∞:</label>
        <select
          id="country-select"
          value={countryFilter}
          onChange={(e) => setCountryFilter(e.target.value)}
          className="genre-select"
        >
          <option value="">–í—Å–µ —Å—Ç—Ä–∞–Ω—ã</option>
          {uniqueCountries.map((country) => (
            <option key={country} value={country}>
              {countryNames[country] || country}
            </option>
          ))}
        </select>

        <label htmlFor="director-select">–†–µ–∂–∏—Å—Å—ë—Ä:</label>
        <select
          id="director-select"
          value={directorFilter}
          onChange={(e) => setDirectorFilter(e.target.value)}
          className="genre-select"
        >
          <option value="">–í—Å–µ —Ä–µ–∂–∏—Å—Å—ë—Ä—ã</option>
          {directors.map((d) => (
            <option key={d.Directors_id} value={d.Name}>
              {d.Name}
            </option>
          ))}
        </select>

        <button
          className="reset-button"
          onClick={() => {
            setGenreFilter('');
            setYearFilter('');
            setCountryFilter('');
            setDirectorFilter('');
          }}
        >
          –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
        </button>
      </div>

      <div className="movies-grid">
        {filteredMovies.map((movie) => (
          <Link to={`/movie/${movie.Movie_id}`} className="movie-card" key={movie.Movie_id}>
            <img src={movie.Poster_path} alt={movie.Title} />
            <h3>{movie.Title}</h3>
            <p>{movie.Release_year}</p>
            <p>{movie.genres}</p>
            <p>{countryNames[movie.Country] || movie.Country}</p>
            {movie.directors && <p>üé¨ {movie.directors}</p>}
          </Link>
        ))}
      </div>
    </div>
  );
};

export default AllMoviesPage;
